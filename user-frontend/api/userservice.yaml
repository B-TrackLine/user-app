openapi: 3.0.1
info:
  title: Fitrockr User Service
  description: Handling of users
  license:
    name: proprietary license
  version: 0.1.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users:
    get:
      tags:
      - user
      summary: list existing users
      operationId: listUsers
      parameters:
      - name: filterName
        in: query
        required: false
        schema:
          type: string
      - name: filterEmail
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUsersModel"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
    post:
      tags:
      - user
      summary: add a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseUserModel"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
  /users/{userId}:
    get:
      tags:
      - user
      summary: get a user by id
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseUserModel"
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
    delete:
      tags:
      - user
      summary: delete a user by id
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseErrorModel"
components:
  schemas:
    Country:
      type: string
      enum:
      - USA
      - AFGHANISTAN
      - ALBANIA
      - ALGERIA
      - ANDORRA
      - ANGOLA
      - ANTIGUA_DEPS
      - ARGENTINA
      - ARMENIA
      - AUSTRALIA
      - AUSTRIA
      - AZERBAIJAN
      - BAHAMAS
      - BAHRAIN
      - BANGLADESH
      - BARBADOS
      - BELARUS
      - BELGIUM
      - BELIZE
      - BENIN
      - BHUTAN
      - BOLIVIA
      - BOSNIA_HERZEGOVINA
      - BOTSWANA
      - BRAZIL
      - BRUNEI
      - BULGARIA
      - BURKINA
      - BURMA
      - BURUNDI
      - CAMBODIA
      - CAMEROON
      - CANADA
      - CAPE_VERDE
      - CENTRAL_AFRICAN_REP
      - CHAD
      - CHILE
      - CHINA
      - REPUBLIC_OF_CHINA
      - COLOMBIA
      - COMOROS
      - DEMOCRATIC_REPUBLIC_OF_THE_CONGO
      - REPUBLIC_OF_THE_CONGO
      - COSTA_RICA
      - CROATIA
      - CUBA
      - CYPRUS
      - CZECH_REPUBLIC
      - DANZIG
      - DENMARK
      - DJIBOUTI
      - DOMINICA
      - DOMINICAN_REPUBLIC
      - EAST_TIMOR
      - ECUADOR
      - EGYPT
      - EL_SALVADOR
      - EQUATORIAL_GUINEA
      - ERITREA
      - ESTONIA
      - ETHIOPIA
      - FIJI
      - FINLAND
      - FRANCE
      - GABON
      - GAZA_STRIP
      - THE_GAMBIA
      - GEORGIA
      - GERMANY
      - GHANA
      - GREECE
      - GRENADA
      - GUATEMALA
      - GUINEA
      - GUINEA_BISSAU
      - GUYANA
      - HAITI
      - HOLY_ROMAN_EMPIRE
      - HONDURAS
      - HUNGARY
      - ICELAND
      - INDIA
      - INDONESIA
      - IRAN
      - IRAQ
      - REPUBLIC_OF_IRELAND
      - ISRAEL
      - ITALY
      - IVORY_COAST
      - JAMAICA
      - JAPAN
      - JONATHANLAND
      - JORDAN
      - KAZAKHSTAN
      - KENYA
      - KIRIBATI
      - NORTH_KOREA
      - SOUTH_KOREA
      - KOSOVO
      - KUWAIT
      - KYRGYZSTAN
      - LAOS
      - LATVIA
      - LEBANON
      - LESOTHO
      - LIBERIA
      - LIBYA
      - LIECHTENSTEIN
      - LITHUANIA
      - LUXEMBOURG
      - MACEDONIA
      - MADAGASCAR
      - MALAWI
      - MALAYSIA
      - MALDIVES
      - MALI
      - MALTA
      - MARSHALL_ISLANDS
      - MAURITANIA
      - MAURITIUS
      - MEXICO
      - MICRONESIA
      - MOLDOVA
      - MONACO
      - MONGOLIA
      - MONTENEGRO
      - MOROCCO
      - MOUNT_ATHOS
      - MOZAMBIQUE
      - NAMIBIA
      - NAURU
      - NEPAL
      - NEWFOUNDLAND
      - NETHERLANDS
      - NEW_ZEALAND
      - NICARAGUA
      - NIGER
      - NIGERIA
      - NORWAY
      - OMAN
      - OTTOMAN_EMPIRE
      - PAKISTAN
      - PALAU
      - PANAMA
      - PAPUA_NEW_GUINEA
      - PARAGUAY
      - PERU
      - PHILIPPINES
      - POLAND
      - PORTUGAL
      - PRUSSIA
      - QATAR
      - ROMANIA
      - ROME
      - RUSSIAN_FEDERATION
      - RWANDA
      - GRENADINES
      - SAMOA
      - SAN_MARINO
      - SAO_TOME_PRINCIPE
      - SAUDI_ARABIA
      - SENEGAL
      - SERBIA
      - SEYCHELLES
      - SIERRA_LEONE
      - SINGAPORE
      - SLOVAKIA
      - SLOVENIA
      - SOLOMON_ISLANDS
      - SOMALIA
      - SOUTH_AFRICA
      - SPAIN
      - SRI_LANKA
      - SUDAN
      - SURINAME
      - SWAZILAND
      - SWEDEN
      - SWITZERLAND
      - SYRIA
      - TAJIKISTAN
      - TANZANIA
      - THAILAND
      - TOGO
      - TONGA
      - TRINIDAD_TOBAGO
      - TUNISIA
      - TURKEY
      - TURKMENISTAN
      - TUVALU
      - UGANDA
      - UKRAINE
      - UNITED_ARAB_EMIRATES
      - UNITED_KINGDOM
      - URUGUAY
      - UZBEKISTAN
      - VANUATU
      - VATICAN_CITY
      - VENEZUELA
      - VIETNAM
      - YEMEN
      - ZAMBIA
      - ZIMBABWE
    Language:
      type: string
      enum:
      - ENGLISH
      - GERMAN
    UserCreateModel:
      required:
      - country
      - email
      - language
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        country:
          $ref: "#/components/schemas/Country"
        language:
          $ref: "#/components/schemas/Language"
    ResponseErrorModel:
      type: object
      properties:
        errorMessage:
          type: string
    ResponseUserModel:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/UserReadModel"
    UserReadModel:
      required:
      - country
      - email
      - id
      - language
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        country:
          $ref: "#/components/schemas/Country"
        language:
          $ref: "#/components/schemas/Language"
    ResponseUsersModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserReadModel"
